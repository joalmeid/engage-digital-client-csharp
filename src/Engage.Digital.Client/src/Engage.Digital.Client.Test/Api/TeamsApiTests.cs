/* 
 * Engage Digital API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Engage.Digital.Client;
using Engage.Digital.Client.Api;
using Engage.Digital.Model;

namespace Engage.Digital.Api.Test
{
    /// <summary>
    ///  Class for testing TeamsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class TeamsApiTests : IDisposable
    {
        private TeamsApi instance;

        public TeamsApiTests()
        {
            instance = new TeamsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of TeamsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' TeamsApi
            //Assert.IsType(typeof(TeamsApi), instance, "instance is a TeamsApi");
        }

        
        /// <summary>
        /// Test CreateTeam
        /// </summary>
        [Fact]
        public void CreateTeamTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //List<string> leaderIds = null;
            //List<string> userIds = null;
            //var response = instance.CreateTeam(name, leaderIds, userIds);
            //Assert.IsType<Team> (response, "response is Team");
        }
        
        /// <summary>
        /// Test DeleteTeam
        /// </summary>
        [Fact]
        public void DeleteTeamTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string teamId = null;
            //string takeOverCategoryId = null;
            //var response = instance.DeleteTeam(teamId, takeOverCategoryId);
            //Assert.IsType<Team> (response, "response is Team");
        }
        
        /// <summary>
        /// Test GetAllTeams
        /// </summary>
        [Fact]
        public void GetAllTeamsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? offset = null;
            //int? limit = null;
            //var response = instance.GetAllTeams(offset, limit);
            //Assert.IsType<GetAllTeamsResponse> (response, "response is GetAllTeamsResponse");
        }
        
        /// <summary>
        /// Test GetTeam
        /// </summary>
        [Fact]
        public void GetTeamTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string teamId = null;
            //var response = instance.GetTeam(teamId);
            //Assert.IsType<Team> (response, "response is Team");
        }
        
        /// <summary>
        /// Test UpdateTeam
        /// </summary>
        [Fact]
        public void UpdateTeamTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string teamId = null;
            //string name = null;
            //List<string> leaderIds = null;
            //List<string> userIds = null;
            //var response = instance.UpdateTeam(teamId, name, leaderIds, userIds);
            //Assert.IsType<Team> (response, "response is Team");
        }
        
    }

}
