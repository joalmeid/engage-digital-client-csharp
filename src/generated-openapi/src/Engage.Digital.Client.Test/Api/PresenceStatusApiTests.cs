/* 
 * Engage Digital API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Engage.Digital.Client;
using Engage.Digital.Client.Api;
using Engage.Digital.Model;

namespace Engage.Digital.Api.Test
{
    /// <summary>
    ///  Class for testing PresenceStatusApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class PresenceStatusApiTests : IDisposable
    {
        private PresenceStatusApi instance;

        public PresenceStatusApiTests()
        {
            instance = new PresenceStatusApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of PresenceStatusApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' PresenceStatusApi
            //Assert.IsType(typeof(PresenceStatusApi), instance, "instance is a PresenceStatusApi");
        }

        
        /// <summary>
        /// Test CreatePresenceStatus
        /// </summary>
        [Fact]
        public void CreatePresenceStatusTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //var response = instance.CreatePresenceStatus(name);
            //Assert.IsType<PresenceStatus> (response, "response is PresenceStatus");
        }
        
        /// <summary>
        /// Test DeletePresenceStatus
        /// </summary>
        [Fact]
        public void DeletePresenceStatusTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string presenceStatusId = null;
            //var response = instance.DeletePresenceStatus(presenceStatusId);
            //Assert.IsType<PresenceStatus> (response, "response is PresenceStatus");
        }
        
        /// <summary>
        /// Test GetAllPresenceStatus
        /// </summary>
        [Fact]
        public void GetAllPresenceStatusTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? offset = null;
            //int? limit = null;
            //var response = instance.GetAllPresenceStatus(offset, limit);
            //Assert.IsType<GetAllPresenceStatusResponse> (response, "response is GetAllPresenceStatusResponse");
        }
        
        /// <summary>
        /// Test GetPresenceStatus
        /// </summary>
        [Fact]
        public void GetPresenceStatusTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string presenceStatusId = null;
            //var response = instance.GetPresenceStatus(presenceStatusId);
            //Assert.IsType<PresenceStatus> (response, "response is PresenceStatus");
        }
        
        /// <summary>
        /// Test UpdatePresenceStatus
        /// </summary>
        [Fact]
        public void UpdatePresenceStatusTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string presenceStatusId = null;
            //string name = null;
            //var response = instance.UpdatePresenceStatus(presenceStatusId, name);
            //Assert.IsType<PresenceStatus> (response, "response is PresenceStatus");
        }
        
    }

}
