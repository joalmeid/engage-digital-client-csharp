/* 
 * Engage Digital API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Engage.Digital.Client;
using Engage.Digital.Client.Api;
using Engage.Digital.Model;

namespace Engage.Digital.Api.Test
{
    /// <summary>
    ///  Class for testing AttachmentsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class AttachmentsApiTests : IDisposable
    {
        private AttachmentsApi instance;

        public AttachmentsApiTests()
        {
            instance = new AttachmentsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of AttachmentsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' AttachmentsApi
            //Assert.IsType(typeof(AttachmentsApi), instance, "instance is a AttachmentsApi");
        }

        
        /// <summary>
        /// Test CreateAttachment
        /// </summary>
        [Fact]
        public void CreateAttachmentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //System.IO.Stream file = null;
            //string _private = null;
            //var response = instance.CreateAttachment(file, _private);
            //Assert.IsType<Attachment> (response, "response is Attachment");
        }
        
        /// <summary>
        /// Test GetAllAttachments
        /// </summary>
        [Fact]
        public void GetAllAttachmentsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? offset = null;
            //int? limit = null;
            //var response = instance.GetAllAttachments(offset, limit);
            //Assert.IsType<GetAllAttachmentsResponse> (response, "response is GetAllAttachmentsResponse");
        }
        
        /// <summary>
        /// Test GetAttachment
        /// </summary>
        [Fact]
        public void GetAttachmentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string attachmentId = null;
            //var response = instance.GetAttachment(attachmentId);
            //Assert.IsType<Attachment> (response, "response is Attachment");
        }
        
    }

}
