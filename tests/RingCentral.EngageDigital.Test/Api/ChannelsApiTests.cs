/* 
 * Engage Digital API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using RingCentral.EngageDigital.Client;
using RingCentral.EngageDigital.Api;
using RingCentral.EngageDigital.Model;

namespace RingCentral.EngageDigital.Test
{
    /// <summary>
    ///  Class for testing ChannelsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class ChannelsApiTests : IDisposable
    {
        private ChannelsApi instance;

        public ChannelsApiTests()
        {
            instance = new ChannelsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ChannelsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' ChannelsApi
            //Assert.IsType(typeof(ChannelsApi), instance, "instance is a ChannelsApi");
        }

        
        /// <summary>
        /// Test GetAllChannels
        /// </summary>
        [Fact]
        public void GetAllChannelsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? offset = null;
            //int? limit = null;
            //var response = instance.GetAllChannels(offset, limit);
            //Assert.IsType<GetAllChannelsResponse> (response, "response is GetAllChannelsResponse");
        }
        
        /// <summary>
        /// Test GetChannel
        /// </summary>
        [Fact]
        public void GetChannelTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string channelId = null;
            //var response = instance.GetChannel(channelId);
            //Assert.IsType<Channel> (response, "response is Channel");
        }
        
        /// <summary>
        /// Test UpdateChannel
        /// </summary>
        [Fact]
        public void UpdateChannelTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string channelId = null;
            //string name = null;
            //Collection<string> sourceIds = null;
            //int? softCapability = null;
            //int? hardCapability = null;
            //int? taskTimeoutSeconds = null;
            //var response = instance.UpdateChannel(channelId, name, sourceIds, softCapability, hardCapability, taskTimeoutSeconds);
            //Assert.IsType<Channel> (response, "response is Channel");
        }
        
    }

}
