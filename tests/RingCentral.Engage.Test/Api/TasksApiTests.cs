/* 
 * Engage Digital API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using RingCentral.Engage.Client;
using RingCentral.Engage.Api;
using RingCentral.Engage.Model;

namespace RingCentral.Engage.Test
{
    /// <summary>
    ///  Class for testing TasksApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class TasksApiTests
    {
        private TasksApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new TasksApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of TasksApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' TasksApi
            //Assert.IsInstanceOfType(typeof(TasksApi), instance, "instance is a TasksApi");
        }

        /// <summary>
        /// Test GetAllTasks
        /// </summary>
        [Test]
        public void GetAllTasksTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string queue = null;
            //string channelId = null;
            //string step = null;
            //int? offset = null;
            //int? limit = null;
            //var response = instance.GetAllTasks(queue, channelId, step, offset, limit);
            //Assert.IsInstanceOf<GetAllTasksResponse> (response, "response is GetAllTasksResponse");
        }
        /// <summary>
        /// Test GetTask
        /// </summary>
        [Test]
        public void GetTaskTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string taskId = null;
            //var response = instance.GetTask(taskId);
            //Assert.IsInstanceOf<Task> (response, "response is Task");
        }
        /// <summary>
        /// Test MoveTask
        /// </summary>
        [Test]
        public void MoveTaskTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string taskId = null;
            //string queue = null;
            //var response = instance.MoveTask(taskId, queue);
            //Assert.IsInstanceOf<Task> (response, "response is Task");
        }
        /// <summary>
        /// Test TransferTask
        /// </summary>
        [Test]
        public void TransferTaskTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string taskId = null;
            //List<string> agentIds = null;
            //string bypass = null;
            //List<string> categoryIds = null;
            //string language = null;
            //List<string> teamIds = null;
            //string comment = null;
            //var response = instance.TransferTask(taskId, agentIds, bypass, categoryIds, language, teamIds, comment);
            //Assert.IsInstanceOf<Task> (response, "response is Task");
        }
    }

}
