/* 
 * Engage Digital API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using RingCentral.EngageDigital.Client;
using RingCentral.EngageDigital.Api;
using RingCentral.EngageDigital.Model;

namespace RingCentral.Engage.Test
{
    /// <summary>
    ///  Class for testing EventsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class EventsApiTests
    {
        private EventsApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new EventsApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of EventsApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' EventsApi
            //Assert.IsInstanceOfType(typeof(EventsApi), instance, "instance is a EventsApi");
        }

        /// <summary>
        /// Test GetAllEvents
        /// </summary>
        [Test]
        public void GetAllEventsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string q = null;
            //int? offset = null;
            //int? limit = null;
            //var response = instance.GetAllEvents(q, offset, limit);
            //Assert.IsInstanceOf<GetAllEventsResponse> (response, "response is GetAllEventsResponse");
        }
        /// <summary>
        /// Test GetEvent
        /// </summary>
        [Test]
        public void GetEventTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string eventId = null;
            //var response = instance.GetEvent(eventId);
            //Assert.IsInstanceOf<Event> (response, "response is Event");
        }
    }

}
